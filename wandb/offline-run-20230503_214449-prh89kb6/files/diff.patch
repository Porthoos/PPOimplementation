diff --git a/.idea/other.xml b/.idea/other.xml
new file mode 100644
index 0000000..58daadc
--- /dev/null
+++ b/.idea/other.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PySciProjectComponent">
+    <option name="PY_MATPLOTLIB_IN_TOOLWINDOW" value="false" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/draw.py b/draw.py
index 039d98a..0b54834 100644
--- a/draw.py
+++ b/draw.py
@@ -4,6 +4,17 @@ import pandas as pd
 import matplotlib.pyplot as plt
 
 
+def smooth(data, window):
+    length = len(data)
+    result = np.ndarray
+    for _ in range(window-1):
+        data = np.append(data[0], data)
+    for i in range(length):
+        result = np.append(result, np.average(data[i:i+window]))
+    return result[1:]
+
+
+
 def parse_tensorboard(path, scalars):
     """returns a dictionary of pandas dataframes for each requested scalar"""
     ea = event_accumulator.EventAccumulator(
@@ -17,24 +28,48 @@ def parse_tensorboard(path, scalars):
     ), "some scalars were not found in the event accumulator"
     return {k: pd.DataFrame(ea.Scalars(k)) for k in scalars}
 
-a = ["eval/test_episode_return"]
-data = parse_tensorboard("runs/gym_STAR/Fix-v1__ppo_normalizeLayer__2200__1682419347", a)
-data = data[a[0]].to_numpy()
-# data = data[:, 1:]
-x = data[:, 1]
-y = data[:, 2]
 
-print("-")
+def read_data(path, scalars, window):
+    data = parse_tensorboard(path, scalars)
+    data = data[scalars[0]].to_numpy()
+    # data = data[:, 1:]
+    x = data[:, 1]
+    y = data[:, 2]
+    y = smooth(y, window)
+    return x, y
 
-plt.style.use('_mpl-gallery')
+# a = ["eval/test_episode_return"]
+# data = parse_tensorboard("eva/runs/gym_STAR/My_Env-v1__ppo_normalizeLayer__2200__1682584545", a)
+# data = data[a[0]].to_numpy()
+# # data = data[:, 1:]
+# x = data[:, 1]
+# y = data[:, 2]
+# y = smooth(y, 100)
 
-# plot
-fig, ax = plt.subplots()
+x1, y1 = read_data("eva/runs/gym_STAR/My_Env-v1__ppo_normalizeLayer__2200__1682584545", ["eval/test_episode_return"], 100)
+x2, y2 = read_data("eva/runs/gym_STAR/Fix_Pos-v1__ppo_normalizeLayer__2200__1682772182", ["eval/test_episode_return"], 100)
+x3, y3 = read_data("eva/runs/gym_STAR/Fix-v1__ppo_normalizeLayer__2200__1682866328", ["eval/test_episode_return"], 100)
 
-ax.step(x, y, linewidth=0.5)
 
-# ax.set(xlim=(0, 8), xticks=np.arange(1, 8),
-#        ylim=(0, 8), yticks=np.arange(1, 8))
+print("-")
+
+plt.style.use('_mpl-gallery')
+
+plt.figure()
+plt.xlim((0, 25000000))
+plt.ylim((50, 200))
+x_ticks = np.linspace(0, 25000000, 11)
+y_ticks = np.linspace(50, 200, 5)
+plt.xticks(x_ticks)
+plt.yticks(y_ticks)
+plt.xlabel("steps")
+plt.ylabel("reward")
 
+plt.step(x1, y1, color="blue", linewidth=0.5, label="STAR-RIS deployment")
+plt.step(x2, y2, color="green", linewidth=0.5, label="STAR-RIS fix position")
+plt.step(x3, y3, color="red", linewidth=0.5, label="STAR-RIS fix position and orientation")
+plt.legend(loc="best")
 plt.show()
+# plt.imsave("eva/figures/data")
+plt.savefig("eva/figures/data")
 
diff --git a/gym-STAR/gym_STAR/env/Fix.py b/gym-STAR/gym_STAR/env/Fix.py
index ee150ad..168c012 100644
--- a/gym-STAR/gym_STAR/env/Fix.py
+++ b/gym-STAR/gym_STAR/env/Fix.py
@@ -78,9 +78,9 @@ class Fix(gym.Env):
         self.STAR_position = [0, 0, 10]
         self.link_position = [0, 0, 0]
         self.type = np.zeros(shape=(self.K, 1))
-        self.P_K_list = np.random.normal(scale=100, size=(3, self.K))
-        self.P_K_list[:, :3] += 200
-        self.P_K_list[:, 3:] -= 200
+        self.P_K_list = np.random.uniform(low=-500, high=500, size=(3, self.K))
+        # self.P_K_list[:, :3] += 200
+        # self.P_K_list[:, 3:] -= 200
         self.P_K_list[2, :] = 0
         self.t = 0
 
@@ -268,9 +268,8 @@ class Fix(gym.Env):
     #TODO reset the environmrnt, user position, time, observation state, STAR position???
     def reset(self, seed=None, options=None):
         super().reset(seed=seed)
-        self.P_K_list = np.random.normal(scale=100, size=(3, self.K))
-        self.P_K_list[:, :3] += 200
-        self.P_K_list[:, 3:] -= 200
+        self.P_K_list = np.random.uniform(low=-500, high=500, size=(3, self.K))
+        # self.P_K_list[:, :] -= 500
         self.P_K_list[2, :] = 0
 
         # self.FD_B_K = np.random.normal(scale=1, size=(self.M, self.K, self.T)) + np.random.normal(scale=1, size=(self.M, self.K, self.T)) * 1j
diff --git a/gym-STAR/gym_STAR/env/Fix_Pos.py b/gym-STAR/gym_STAR/env/Fix_Pos.py
index df8fdf7..ccf665d 100644
--- a/gym-STAR/gym_STAR/env/Fix_Pos.py
+++ b/gym-STAR/gym_STAR/env/Fix_Pos.py
@@ -78,9 +78,8 @@ class Fix_Pos(gym.Env):
         self.STAR_position = [0, 0, 10]
         self.link_position = [0, 0, 0]
         self.type = np.zeros(shape=(self.K, 1))
-        self.P_K_list = np.random.normal(scale=100, size=(3, self.K))
-        self.P_K_list[:, :3] += 200
-        self.P_K_list[:, 3:] -= 200
+        self.P_K_list = np.random.uniform(low=-500, high=500, size=(3, self.K))
+        # self.P_K_list[:, :] -= 500
         self.P_K_list[2, :] = 0
         self.t = 0
 
@@ -272,9 +271,8 @@ class Fix_Pos(gym.Env):
     #TODO reset the environmrnt, user position, time, observation state, STAR position???
     def reset(self, seed=None, options=None):
         super().reset(seed=seed)
-        self.P_K_list = np.random.normal(scale=100, size=(3, self.K))
-        self.P_K_list[:, :3] += 200
-        self.P_K_list[:, 3:] -= 200
+        self.P_K_list = np.random.uniform(low=-500, high=500, size=(3, self.K))
+        # self.P_K_list[:, :] -= 500
         self.P_K_list[2, :] = 0
 
         # self.FD_B_K = np.random.normal(scale=1, size=(self.M, self.K, self.T)) + np.random.normal(scale=1, size=(self.M, self.K, self.T)) * 1j
diff --git a/gym-STAR/gym_STAR/env/RIS_Env.py b/gym-STAR/gym_STAR/env/RIS_Env.py
index e193867..1515fdd 100644
--- a/gym-STAR/gym_STAR/env/RIS_Env.py
+++ b/gym-STAR/gym_STAR/env/RIS_Env.py
@@ -78,9 +78,9 @@ class RIS_Env(gym.Env):
         self.STAR_position = [0, 0, 10]
         self.link_position = [0, 0, 0]
         self.type = np.zeros(shape=(self.K, 1))
-        self.P_K_list = np.random.normal(scale=100, size=(3, self.K))
-        self.P_K_list[:, :3] += 200
-        self.P_K_list[:, 3:] -= 200
+        self.P_K_list = np.random.uniform(low=-500, high=500, size=(3, self.K))
+        # self.P_K_list[:, :3] += 200
+        # self.P_K_list[:, 3:] -= 200
         self.P_K_list[2, :] = 0
         self.t = 0
 
@@ -268,9 +268,8 @@ class RIS_Env(gym.Env):
     #TODO reset the environmrnt, user position, time, observation state, STAR position???
     def reset(self, seed=None, options=None):
         super().reset(seed=seed)
-        self.P_K_list = np.random.normal(scale=100, size=(3, self.K))
-        self.P_K_list[:, :3] += 200
-        self.P_K_list[:, 3:] -= 200
+        self.P_K_list = np.random.uniform(low=-500, high=500, size=(3, self.K))
+        # self.P_K_list[:, :] -= 500
         self.P_K_list[2, :] = 0
 
         # self.FD_B_K = np.random.normal(scale=1, size=(self.M, self.K, self.T)) + np.random.normal(scale=1, size=(self.M, self.K, self.T)) * 1j
diff --git a/ppo_normalizeLayer.py b/ppo_normalizeLayer.py
index 7a41adc..61a5f8b 100644
--- a/ppo_normalizeLayer.py
+++ b/ppo_normalizeLayer.py
@@ -38,9 +38,9 @@ def parse_args():
         help="whether to capture videos of the agent performances (check out `videos` folder)")
 
     # Algorithm specific arguments
-    parser.add_argument("--env-id", type=str, default="gym_STAR/Fix-v1",
+    parser.add_argument("--env-id", type=str, default="gym_STAR/My_Env-v1",
         help="the id of the environment")
-    parser.add_argument("--total-timesteps", type=int, default=25000000,
+    parser.add_argument("--total-timesteps", type=int, default=30000000,
         help="total timesteps of the experiments")
     parser.add_argument("--learning-rate", type=float, default=3e-4,
         help="the learning rate of the optimizer")
@@ -87,7 +87,7 @@ def make_env(env_id, idx, capture_video, run_name, gamma):
             env = gym.make(env_id, render_mode="rgb_array")
         else:
             env = gym.make(env_id)
-        env = gym.wrappers.FlattenObservation(env)  # deal with dm_control's Dict observation space
+        env = gym.wrappers.FlattenObservation(env)  # deal with dm`_control's Dict observation space
         env = gym.wrappers.RecordEpisodeStatistics(env)
         if capture_video:
             if idx == 0:
diff --git a/wandb/debug-cli.JinLab.log b/wandb/debug-cli.JinLab.log
index 2d9c106..afe15ff 100644
--- a/wandb/debug-cli.JinLab.log
+++ b/wandb/debug-cli.JinLab.log
@@ -554,3 +554,18 @@ requests.exceptions.ReadTimeout: HTTPSConnectionPool(host='api.wandb.ai', port=4
 2023-04-25 18:44:09 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
 2023-04-25 18:44:09 WARNING Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
 2023-04-25 18:44:09 WARNING Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-27 16:37:07 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-27 16:37:07 WARNING Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-27 16:37:07 WARNING Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-28 22:05:09 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-28 22:05:09 WARNING Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-28 22:05:09 WARNING Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-29 20:44:29 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-29 20:44:29 WARNING Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-29 20:44:29 WARNING Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-30 22:53:22 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-30 22:53:22 WARNING Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-04-30 22:53:22 WARNING Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-05-02 16:16:08 WARNING Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-05-02 16:16:08 WARNING Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
+2023-05-02 16:16:08 WARNING Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLEOFError(8, 'EOF occurred in violation of protocol (_ssl.c:1131)'))': /api/5288891/envelope/
